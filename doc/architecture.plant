@startuml
title modularni-urad - Component Diagram

actor Admin
actor Citizen

node "Admin WebApp" as awa {
    [PaRo admin]
    [Task admin]
    [other admin modules]
}

node "Citizen WebApp" as cwa {
    [PaRo]
    [GEO Participace]
    [other modules]
}

cloud Internet {
}

node "Nginx docker\nSSL, custom domain, ..." as nginx {
    [/api/paro] as ngParo
    [/api/geopartip] as ngGeoPartip
    [/api/auth] as ngAuth
    [/api/taskman] as ngTaskman
}

node "Auth Docker" {
    [Auth] as auth
}
node NIA
database "user\ndatabase" as UserDB
node "PaRo Docker" {
    node [PaRo] as paro {
        [auth middleware] as authMWParo
    }
}
node "GEOPartip Docker" {
    node [GEOPartip] as geoPartip {
        [auth middleware] as authMWGeoPartip
    }
}

node "Taskman Docker" {
    [Python Taskman] as taskman
    note right of taskman
        Komponenty lze psát
        i v jiných jazycích
    end note
}
node "Postgre Docker" {
    database "PostgreSQL" as postgre
}
node "Redis docker" {
    database redis
    note left of redis
        Uchovává sessions
    end note
}

Admin -down-> awa
Citizen -down-> cwa
awa -down-> Internet
cwa -down-> Internet
Internet -down-> nginx

ngParo -down-> paro: request with\nsessionID\ncookie
ngGeoPartip -down-> geoPartip: request with\nsessionID\ncookie
ngTaskman -down-> taskman: request with\nsessionID\ncookie
ngAuth -down-> auth
auth -up-> ngAuth: sessionID\ncookie
auth -down-> redis: stores\nsession
NIA --> auth: info z\ncentralnich\nregistru
UserDB --> auth: uzivatele\n(napr. z LDAP)

authMWParo <- redis: session\n(user info)
authMWGeoPartip <- redis: session\n(user info)

paro -down-> postgre
geoPartip -down-> postgre
taskman -down-> postgre
taskman <- redis
@enduml
